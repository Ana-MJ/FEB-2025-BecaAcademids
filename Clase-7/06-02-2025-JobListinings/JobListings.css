/* Importar fuente externa */
@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Spartan:wght@500;700&display=swap');

.attribution { font-size: 11px; text-align: center; position: absolute; bottom: 3px; left: 50%; transform: translateX(-50%); }
.attribution a { color: #3e52a3; }

*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Pseudo selector que representa el elemento raiz del documento html */
/* (--) variable css personalizada  */
:root {
    --dark-cyan: hsl(180, 29%, 50%);
    --bg-cyan: hsl(180, 52%, 96%);
    --filter-cyan: hsl(180, 31%, 95%);
    --dark-gray-cyan: hsl(180, 8%, 52%);
    --very-dark-cyan: hsl(180, 14%, 20%);

    --shadow: 0 5px 30px 10px hsl(180, 29%, 50%, .2);
}

body {
    font-family: 'Spartan', sans-serif;
    position: relative; /* el elemento se puede mover desde su posición normal, pero sin salir de su espacio original */
}

/* var(): Es una función que se utiliza para acceder al valor de una variable CSS previamente definida */
header {
    min-height: 150px; /* altura minima */
    background-color: var(--dark-cyan);
    background-position: center;
    background-size: cover; /* imagen de fondo cubra completamente el área del elemento <div> dentro del espacio disponible */
}

/* ..em => tamaño del elemento padre
   .rem => tamaño de la fuente raiz */

.filter {
    width: 100%;
    position: relative;
    background: white;
    height: auto;
    padding: 16px; /* espacio dentro del conetendor (entre el contenido y el borde) */
    margin: auto;
    bottom: 50px;
    border-radius: 5px;
    box-shadow: var(--shadow);
    max-width: 1000px;
    display: none;
    justify-content: space-between; /* distribuye elementos dentro el contenedor para que haya espacios iguales entre cada uno de ellos */
    gap: 1em; /* definir el espacio entre los elementos en un contenedor de tipo flex (largo) o grid (separa celdas de la cuadricula), se aplica a los hijos sin tener aplicar margenes individuales */
}

.span {
    display: inline-block;
    background: var(--filter-cyan);
    border-radius: 5px;
    overflow: hidden; /* para controlar como se maneja el contenido que se desborda haciendo que el contenido sobrante se recorte y no se muestre */
    margin: 3px;
}

.filter-wrapper {
    display: flex;
    flex-wrap: wrap; /* si los elementos en el contenedor no caben en una sola fila/columna se envuelven a la siguiente (se acomoden en una nueva línea) */
}

.filter-sub p {
    padding: .5em;
    display: inline-block;
    font-size: .8rem;
    font-weight: 700; /* grosor de la fuente */
    color: var(--dark-cyan)
}

.filter-sub button {
    height: 30px;
    aspect-ratio: 1; /* establece una proporcion especifica entre el ancho y la altura de un elemento */
    background: var(--dark-cyan);
    border: none;
    cursor: pointer;
}

.filter-sub button:hover {
    background: var(--very-dark-cyan);
}

.filter-sub img {
    margin: auto;
}


main {
    padding: 25px 1.5em 1em;
    min-height: 100vh;
}

.container {
    box-shadow: var(--shadow);
    border-radius: 7px;
    margin: 2em auto 2.5em;
    padding: 40px 1em 1em;
    position: relative;
}

/* <= borde del div (primeros dos contenidos) */
.container.featured {
    border-left: 5px solid var(--dark-cyan);
}

.container img {
    position: absolute;
    bottom: 100%;
    left: 15px;
    transform: translateY(50%); /* para mover un elemento a lo largo del eje Y (vertical) en relación con su posición original */
    width: 60px;
}

.top {
    display: flex;
    gap: 1em;
    align-items: center;
    margin: .5em 0;
}

.top h2 {
    color: var(--dark-cyan);
    font-size: 1rem;
}

.stat span {
    margin: 0 5px;
    padding: .5em .8em;
    text-transform: uppercase; /* transformar el texto de un elemento en letras mayúsculas */
    color: white;
    font-weight: 700;
    border-radius: 15px;
    font-size: .5rem;
    display: inline-block;
    line-height: 2; /* controlar la altura de la línea de un elemento, el espacio vertical entre las líneas de texto dentro de un bloque de texto */
}

.feature {
    background: var(--very-dark-cyan);
}

.new {
    background: var(--dark-cyan);
}

.container a {
    color: var(--very-dark-cyan);
    text-decoration: none; /* eliminar cualquier decoración del texto en un elemento */
    font-weight: 700;
    font-size: 1.2rem;
    cursor: pointer;
}

.container a:hover {
    color: var(--dark-cyan);
}

.availability {
    display: flex;
    color: var(--dark-gray-cyan);
    margin: .6em 0; /* .6 (vetical) 0 (horizontal) */
}

.availability li {
    margin-right: 2em;
    font-size: .8rem;
    font-weight: 500;
}

.availability li:first-child {
    list-style: none;
}

.container hr {
    margin: 1em 0;
    opacity: .5;
}

.tags {
    display: flex;
    flex-wrap: wrap;
}

.tags button {
    border: none;
    background: var(--filter-cyan);
    padding: .8em;
    border-radius: 5px;
    font-weight: 700;
    color: var(--dark-cyan);
    margin: .5em;
    margin-left: 0;
    cursor: pointer;
}

.tags button:hover {
    color: var(--filter-cyan);
    background-color: var(--dark-cyan);
}

/* MOVIL */
@media (min-width: 700px) {
    .container img {
        position: static;
        transform: unset; /* permite modificar el aspecto de un elemento como rotaciones, escalado, traslación */
        bottom: unset;
        width: 70px;
        height: 70px;
        margin-right: .5em;
    }

    .container {
        display: flex;
        align-items: center;
        max-width: 1000px;
        padding: 1em;
    }

    hr {
        display: none;
    }

    /* controla la capacidad de un elemento dentro de un contenedor para expandirse y ocupar espacio adicional 
        cuando haya espacio disponible */
    .head {
        flex-grow: 1;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .tags>* {
        height: 40px;
    }
}
